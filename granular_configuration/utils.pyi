import typing as typ

_T = typ.TypeVar("_T")

class OrderedSet(typ.MutableSet[_T], typ.Reversible[_T], typ.Generic[_T]):
    def __init__(self, iterable: typ.Optional[typ.Iterable[_T]] = None) -> None: ...

    def __contains__(self, item: typ.Any) -> bool: ...

    def __iter__(self) -> typ.Iterator[_T]: ...

    def __len__(self) -> int: ...

    def add(self, value: _T) -> None: ...

    def discard(self, value: _T) -> None: ...

    def __reversed__(self) -> typ.Iterator[_T]: ...

